name: Terraform Deployment

on:
  push:
    branches: [ "main" ]

env:            
  AWS_REGION: us-east-1  

jobs:
  CICD:
    runs-on: ubuntu-latest
  deploy: 
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v4
   
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::255945442255:role/github-actions-role
        aws-region: us-east-1
        role-session-name: github-actions-${{github.run_id}} # unique session name
        audience : sts.amazonaws.com

    - name: Debug OIDC token
      run: |
        curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
        "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com" | jq
      env:
        ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ACTIONS_ID_TOKEN_REQUEST_URL: ${{ env.ACTIONS_ID_TOKEN_REQUEST_URL }}

    - name: Verify AWS credentials
      run: |
        aws sts get-caller-identity

    - name: Verify AWS permissions
      run: |
        aws sts get-caller-identity
        aws dynamodb describe-table --table-name terraform-state-locks     
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
   
    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan
   
    - name: Terraform Apply
      run: |
        terraform workspace new $GITHUB_RUN_ID || true
        terraform workspace select $GITHUB_RUN_ID
        terraform apply -auto-approve
    